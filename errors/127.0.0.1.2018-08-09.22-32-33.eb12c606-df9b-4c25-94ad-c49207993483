(dp1
S'output'
p2
S'<type \'exceptions.SyntaxError\'> Field: invalid table name: Add Notes, use rname for "funny" names'
p3
sS'layer'
p4
S'E:\\JUSTICEHALL\\document\\study\\project\\web2py\\applications\\noteapp\\models\\db.py'
p5
sS'code'
p6
S'<code object <module> at 0380B770, file "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\applications\\noteapp\\models\\db.py", line 1>'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\gluon\\restricted.py", line 219, in restricted\n    exec(ccode, environment)\n  File "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\applications\\noteapp\\models\\db.py", line 7, in <module>\n    Field(\'db_typenote\'))\n  File "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\gluon\\packages\\dal\\pydal\\base.py", line 586, in define_table\n    table = self.lazy_define_table(tablename, *fields, **args)\n  File "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\gluon\\packages\\dal\\pydal\\base.py", line 598, in lazy_define_table\n    table = table_class(self, tablename, *fields, **args)\n  File "E:\\JUSTICEHALL\\document\\study\\project\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 242, in __init__\n    \'use rname for "funny" names\' % tablename)\nSyntaxError: Field: invalid table name: Add Notes, use rname for "funny" names\n'
p11
s.